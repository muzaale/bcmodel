Traceback (most recent call last):
  File "/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages/jupyter_cache/executors/utils.py", line 58, in single_nb_execution
    executenb(
  File "/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages/nbclient/client.py", line 1305, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/d/Library/Python/3.11/lib/python/site-packages/jupyter_core/utils/__init__.py", line 166, in wrapped
    return loop.run_until_complete(inner)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/asyncio/base_events.py", line 653, in run_until_complete
    return future.result()
           ^^^^^^^^^^^^^^^
  File "/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages/nbclient/client.py", line 705, in async_execute
    await self.async_execute_cell(
  File "/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages/nbclient/client.py", line 1058, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages/nbclient/client.py", line 914, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------


# Load and preprocess the NHANES dataset

# Perform necessary preprocessing steps on the dataset
# ...

# Split the dataset into training and testing sets

# Split the dataset into features (X) and the target variable (y)
X = data[['age', 'female']]

# X = df[['age', 'sex', 'race', 'diabetes', 'hypertension', 'kidney_disease', 'smoking', 'medication',
# 'bmi', 'sbp', 'creatinine', 'albumin_creatinine_ratio', 'egfr', 'hba1c']]
y = data['years']

# Train a Cox proportional hazards regression model
cph = CoxPHFitter()
cph.fit(X, duration_col='years', event_col='died')

# Extract the beta coefficients
betas = cph.summary['coef'].values

# Save the trained model and beta coefficients
with open('model.pkl', 'wb') as file:
    pickle.dump(cph, file)

with open('betas.pkl', 'wb') as file:
    pickle.dump(betas, file)

------------------


[0;31m---------------------------------------------------------------------------[0m
[0;31mKeyError[0m                                  Traceback (most recent call last)
Cell [0;32mIn[2], line 17[0m
[1;32m     15[0m [38;5;66;03m# Train a Cox proportional hazards regression model[39;00m
[1;32m     16[0m cph [38;5;241m=[39m CoxPHFitter()
[0;32m---> 17[0m [43mcph[49m[38;5;241;43m.[39;49m[43mfit[49m[43m([49m[43mX[49m[43m,[49m[43m [49m[43mduration_col[49m[38;5;241;43m=[39;49m[38;5;124;43m'[39;49m[38;5;124;43myears[39;49m[38;5;124;43m'[39;49m[43m,[49m[43m [49m[43mevent_col[49m[38;5;241;43m=[39;49m[38;5;124;43m'[39;49m[38;5;124;43mdied[39;49m[38;5;124;43m'[39;49m[43m)[49m
[1;32m     19[0m [38;5;66;03m# Extract the beta coefficients[39;00m
[1;32m     20[0m betas [38;5;241m=[39m cph[38;5;241m.[39msummary[[38;5;124m'[39m[38;5;124mcoef[39m[38;5;124m'[39m][38;5;241m.[39mvalues

File [0;32m/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages/lifelines/utils/__init__.py:56[0m, in [0;36mCensoringType.right_censoring.<locals>.f[0;34m(model, *args, **kwargs)[0m
[1;32m     53[0m [38;5;129m@wraps[39m(function)
[1;32m     54[0m [38;5;28;01mdef[39;00m [38;5;21mf[39m(model, [38;5;241m*[39margs, [38;5;241m*[39m[38;5;241m*[39mkwargs):
[1;32m     55[0m     [38;5;28mcls[39m[38;5;241m.[39mset_censoring_type(model, [38;5;28mcls[39m[38;5;241m.[39mRIGHT)
[0;32m---> 56[0m     [38;5;28;01mreturn[39;00m [43mfunction[49m[43m([49m[43mmodel[49m[43m,[49m[43m [49m[38;5;241;43m*[39;49m[43margs[49m[43m,[49m[43m [49m[38;5;241;43m*[39;49m[38;5;241;43m*[39;49m[43mkwargs[49m[43m)[49m

File [0;32m/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages/lifelines/fitters/coxph_fitter.py:290[0m, in [0;36mCoxPHFitter.fit[0;34m(self, df, duration_col, event_col, show_progress, initial_point, strata, weights_col, cluster_col, robust, batch_mode, timeline, formula, entry_col, fit_options)[0m
[1;32m    184[0m [38;5;250m[39m[38;5;124;03m"""[39;00m
[1;32m    185[0m [38;5;124;03mFit the Cox proportional hazard model to a right-censored dataset. Alias of `fit_right_censoring`.[39;00m
[1;32m    186[0m 
[0;32m   (...)[0m
[1;32m    287[0m 
[1;32m    288[0m [38;5;124;03m"""[39;00m
[1;32m    289[0m [38;5;28mself[39m[38;5;241m.[39mstrata [38;5;241m=[39m utils[38;5;241m.[39m_to_list_or_singleton(utils[38;5;241m.[39mcoalesce(strata, [38;5;28mself[39m[38;5;241m.[39mstrata))
[0;32m--> 290[0m [38;5;28mself[39m[38;5;241m.[39m_model [38;5;241m=[39m [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43m_fit_model[49m[43m([49m
[1;32m    291[0m [43m    [49m[43mdf[49m[43m,[49m
[1;32m    292[0m [43m    [49m[43mduration_col[49m[43m,[49m
[1;32m    293[0m [43m    [49m[43mevent_col[49m[38;5;241;43m=[39;49m[43mevent_col[49m[43m,[49m
[1;32m    294[0m [43m    [49m[43mshow_progress[49m[38;5;241;43m=[39;49m[43mshow_progress[49m[43m,[49m
[1;32m    295[0m [43m    [49m[43minitial_point[49m[38;5;241;43m=[39;49m[43minitial_point[49m[43m,[49m
[1;32m    296[0m [43m    [49m[43mstrata[49m[38;5;241;43m=[39;49m[38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43mstrata[49m[43m,[49m
[1;32m    297[0m [43m    [49m[43mweights_col[49m[38;5;241;43m=[39;49m[43mweights_col[49m[43m,[49m
[1;32m    298[0m [43m    [49m[43mcluster_col[49m[38;5;241;43m=[39;49m[43mcluster_col[49m[43m,[49m
[1;32m    299[0m [43m    [49m[43mrobust[49m[38;5;241;43m=[39;49m[43mrobust[49m[43m,[49m
[1;32m    300[0m [43m    [49m[43mbatch_mode[49m[38;5;241;43m=[39;49m[43mbatch_mode[49m[43m,[49m
[1;32m    301[0m [43m    [49m[43mtimeline[49m[38;5;241;43m=[39;49m[43mtimeline[49m[43m,[49m
[1;32m    302[0m [43m    [49m[43mformula[49m[38;5;241;43m=[39;49m[43mformula[49m[43m,[49m
[1;32m    303[0m [43m    [49m[43mentry_col[49m[38;5;241;43m=[39;49m[43mentry_col[49m[43m,[49m
[1;32m    304[0m [43m    [49m[43mfit_options[49m[38;5;241;43m=[39;49m[43mfit_options[49m[43m,[49m
[1;32m    305[0m [43m[49m[43m)[49m
[1;32m    306[0m [38;5;28;01mreturn[39;00m [38;5;28mself[39m

File [0;32m/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages/lifelines/fitters/coxph_fitter.py:610[0m, in [0;36mCoxPHFitter._fit_model[0;34m(self, *args, **kwargs)[0m
[1;32m    608[0m [38;5;28;01mdef[39;00m [38;5;21m_fit_model[39m([38;5;28mself[39m, [38;5;241m*[39margs, [38;5;241m*[39m[38;5;241m*[39mkwargs):
[1;32m    609[0m     [38;5;28;01mif[39;00m [38;5;28mself[39m[38;5;241m.[39mbaseline_estimation_method [38;5;241m==[39m [38;5;124m"[39m[38;5;124mbreslow[39m[38;5;124m"[39m:
[0;32m--> 610[0m         [38;5;28;01mreturn[39;00m [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43m_fit_model_breslow[49m[43m([49m[38;5;241;43m*[39;49m[43margs[49m[43m,[49m[43m [49m[38;5;241;43m*[39;49m[38;5;241;43m*[39;49m[43mkwargs[49m[43m)[49m
[1;32m    611[0m     [38;5;28;01melif[39;00m [38;5;28mself[39m[38;5;241m.[39mbaseline_estimation_method [38;5;241m==[39m [38;5;124m"[39m[38;5;124mspline[39m[38;5;124m"[39m:
[1;32m    612[0m         [38;5;28;01mreturn[39;00m [38;5;28mself[39m[38;5;241m.[39m_fit_model_spline([38;5;241m*[39margs, [38;5;241m*[39m[38;5;241m*[39mkwargs)

File [0;32m/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages/lifelines/fitters/coxph_fitter.py:623[0m, in [0;36mCoxPHFitter._fit_model_breslow[0;34m(self, *args, **kwargs)[0m
[1;32m    619[0m model [38;5;241m=[39m SemiParametricPHFitter(
[1;32m    620[0m     penalizer[38;5;241m=[39m[38;5;28mself[39m[38;5;241m.[39mpenalizer, l1_ratio[38;5;241m=[39m[38;5;28mself[39m[38;5;241m.[39ml1_ratio, strata[38;5;241m=[39m[38;5;28mself[39m[38;5;241m.[39mstrata, alpha[38;5;241m=[39m[38;5;28mself[39m[38;5;241m.[39malpha, label[38;5;241m=[39m[38;5;28mself[39m[38;5;241m.[39m_label
[1;32m    621[0m )
[1;32m    622[0m [38;5;28;01mif[39;00m utils[38;5;241m.[39mCensoringType[38;5;241m.[39mis_right_censoring([38;5;28mself[39m):
[0;32m--> 623[0m     [43mmodel[49m[38;5;241;43m.[39;49m[43mfit[49m[43m([49m[38;5;241;43m*[39;49m[43margs[49m[43m,[49m[43m [49m[38;5;241;43m*[39;49m[38;5;241;43m*[39;49m[43mkwargs[49m[43m)[49m
[1;32m    624[0m     [38;5;28;01mreturn[39;00m model
[1;32m    625[0m [38;5;28;01melse[39;00m:

File [0;32m/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages/lifelines/utils/__init__.py:56[0m, in [0;36mCensoringType.right_censoring.<locals>.f[0;34m(model, *args, **kwargs)[0m
[1;32m     53[0m [38;5;129m@wraps[39m(function)
[1;32m     54[0m [38;5;28;01mdef[39;00m [38;5;21mf[39m(model, [38;5;241m*[39margs, [38;5;241m*[39m[38;5;241m*[39mkwargs):
[1;32m     55[0m     [38;5;28mcls[39m[38;5;241m.[39mset_censoring_type(model, [38;5;28mcls[39m[38;5;241m.[39mRIGHT)
[0;32m---> 56[0m     [38;5;28;01mreturn[39;00m [43mfunction[49m[43m([49m[43mmodel[49m[43m,[49m[43m [49m[38;5;241;43m*[39;49m[43margs[49m[43m,[49m[43m [49m[38;5;241;43m*[39;49m[38;5;241;43m*[39;49m[43mkwargs[49m[43m)[49m

File [0;32m/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages/lifelines/fitters/coxph_fitter.py:1229[0m, in [0;36mSemiParametricPHFitter.fit[0;34m(self, df, duration_col, event_col, show_progress, initial_point, strata, weights_col, cluster_col, robust, batch_mode, timeline, formula, entry_col, fit_options)[0m
[1;32m   1226[0m [38;5;28mself[39m[38;5;241m.[39mformula [38;5;241m=[39m formula
[1;32m   1227[0m [38;5;28mself[39m[38;5;241m.[39mentry_col [38;5;241m=[39m entry_col
[0;32m-> 1229[0m X, T, E, weights, entries, original_index, [38;5;28mself[39m[38;5;241m.[39m_clusters [38;5;241m=[39m [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43m_preprocess_dataframe[49m[43m([49m[43mdf[49m[43m)[49m
[1;32m   1231[0m [38;5;28mself[39m[38;5;241m.[39mdurations [38;5;241m=[39m T[38;5;241m.[39mcopy()
[1;32m   1232[0m [38;5;28mself[39m[38;5;241m.[39mevent_observed [38;5;241m=[39m E[38;5;241m.[39mcopy()

File [0;32m/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages/lifelines/fitters/coxph_fitter.py:1306[0m, in [0;36mSemiParametricPHFitter._preprocess_dataframe[0;34m(self, df)[0m
[1;32m   1304[0m [38;5;28;01melse[39;00m:
[1;32m   1305[0m     sort_by [38;5;241m=[39m [[38;5;28mself[39m[38;5;241m.[39mduration_col, [38;5;28mself[39m[38;5;241m.[39mevent_col] [38;5;28;01mif[39;00m [38;5;28mself[39m[38;5;241m.[39mevent_col [38;5;28;01melse[39;00m [[38;5;28mself[39m[38;5;241m.[39mduration_col]
[0;32m-> 1306[0m     df [38;5;241m=[39m [43mdf[49m[38;5;241;43m.[39;49m[43msort_values[49m[43m([49m[43mby[49m[38;5;241;43m=[39;49m[43msort_by[49m[43m)[49m
[1;32m   1307[0m     original_index [38;5;241m=[39m df[38;5;241m.[39mindex[38;5;241m.[39mcopy()
[1;32m   1309[0m [38;5;66;03m# Extract time, event and metadata[39;00m

File [0;32m/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages/pandas/core/frame.py:6750[0m, in [0;36mDataFrame.sort_values[0;34m(self, by, axis, ascending, inplace, kind, na_position, ignore_index, key)[0m
[1;32m   6745[0m     [38;5;28;01mraise[39;00m [38;5;167;01mValueError[39;00m(
[1;32m   6746[0m         [38;5;124mf[39m[38;5;124m"[39m[38;5;124mLength of ascending ([39m[38;5;132;01m{[39;00m[38;5;28mlen[39m(ascending)[38;5;132;01m}[39;00m[38;5;124m)[39m[38;5;124m"[39m  [38;5;66;03m# type: ignore[arg-type][39;00m
[1;32m   6747[0m         [38;5;124mf[39m[38;5;124m"[39m[38;5;124m != length of by ([39m[38;5;132;01m{[39;00m[38;5;28mlen[39m(by)[38;5;132;01m}[39;00m[38;5;124m)[39m[38;5;124m"[39m
[1;32m   6748[0m     )
[1;32m   6749[0m [38;5;28;01mif[39;00m [38;5;28mlen[39m(by) [38;5;241m>[39m [38;5;241m1[39m:
[0;32m-> 6750[0m     keys [38;5;241m=[39m [43m[[49m[38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43m_get_label_or_level_values[49m[43m([49m[43mx[49m[43m,[49m[43m [49m[43maxis[49m[38;5;241;43m=[39;49m[43maxis[49m[43m)[49m[43m [49m[38;5;28;43;01mfor[39;49;00m[43m [49m[43mx[49m[43m [49m[38;5;129;43;01min[39;49;00m[43m [49m[43mby[49m[43m][49m
[1;32m   6752[0m     [38;5;66;03m# need to rewrap columns in Series to apply key function[39;00m
[1;32m   6753[0m     [38;5;28;01mif[39;00m key [38;5;129;01mis[39;00m [38;5;129;01mnot[39;00m [38;5;28;01mNone[39;00m:
[1;32m   6754[0m         [38;5;66;03m# error: List comprehension has incompatible type List[Series];[39;00m
[1;32m   6755[0m         [38;5;66;03m# expected List[ndarray][39;00m

File [0;32m/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages/pandas/core/frame.py:6750[0m, in [0;36m<listcomp>[0;34m(.0)[0m
[1;32m   6745[0m     [38;5;28;01mraise[39;00m [38;5;167;01mValueError[39;00m(
[1;32m   6746[0m         [38;5;124mf[39m[38;5;124m"[39m[38;5;124mLength of ascending ([39m[38;5;132;01m{[39;00m[38;5;28mlen[39m(ascending)[38;5;132;01m}[39;00m[38;5;124m)[39m[38;5;124m"[39m  [38;5;66;03m# type: ignore[arg-type][39;00m
[1;32m   6747[0m         [38;5;124mf[39m[38;5;124m"[39m[38;5;124m != length of by ([39m[38;5;132;01m{[39;00m[38;5;28mlen[39m(by)[38;5;132;01m}[39;00m[38;5;124m)[39m[38;5;124m"[39m
[1;32m   6748[0m     )
[1;32m   6749[0m [38;5;28;01mif[39;00m [38;5;28mlen[39m(by) [38;5;241m>[39m [38;5;241m1[39m:
[0;32m-> 6750[0m     keys [38;5;241m=[39m [[38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43m_get_label_or_level_values[49m[43m([49m[43mx[49m[43m,[49m[43m [49m[43maxis[49m[38;5;241;43m=[39;49m[43maxis[49m[43m)[49m [38;5;28;01mfor[39;00m x [38;5;129;01min[39;00m by]
[1;32m   6752[0m     [38;5;66;03m# need to rewrap columns in Series to apply key function[39;00m
[1;32m   6753[0m     [38;5;28;01mif[39;00m key [38;5;129;01mis[39;00m [38;5;129;01mnot[39;00m [38;5;28;01mNone[39;00m:
[1;32m   6754[0m         [38;5;66;03m# error: List comprehension has incompatible type List[Series];[39;00m
[1;32m   6755[0m         [38;5;66;03m# expected List[ndarray][39;00m

File [0;32m/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages/pandas/core/generic.py:1778[0m, in [0;36mNDFrame._get_label_or_level_values[0;34m(self, key, axis)[0m
[1;32m   1776[0m     values [38;5;241m=[39m [38;5;28mself[39m[38;5;241m.[39maxes[axis][38;5;241m.[39mget_level_values(key)[38;5;241m.[39m_values
[1;32m   1777[0m [38;5;28;01melse[39;00m:
[0;32m-> 1778[0m     [38;5;28;01mraise[39;00m [38;5;167;01mKeyError[39;00m(key)
[1;32m   1780[0m [38;5;66;03m# Check for duplicates[39;00m
[1;32m   1781[0m [38;5;28;01mif[39;00m values[38;5;241m.[39mndim [38;5;241m>[39m [38;5;241m1[39m:

[0;31mKeyError[0m: 'years'

